[project]
name = "spanreed"
version = "0.2"
description = ""
authors = [{name = "Marcin Bachry", email = "hegel666@gmail.com"}]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "pydantic",
  "pydantic-settings",
  "walrus",
]

[project.optional-dependencies]
dev = [
  "django",
  "factory-boy",
  "pytest",
  "pytest-cov",
  "pytest-env",
  "pytest-redis",
  "tox-factor",
  "tox-pyenv",
]

[project.scripts]
spanreed-consumer = "spanreed.commands:spanreed_consumer"
spanreed-requeue = "spanreed.commands:requeue_dead_letter"

[project.entry-points.pytest11]
spanreed = "spanreed.testing.pytest_plugin"

[tool.pytest.ini_options]
addopts = "-vv -W all --tb=short --log-level=DEBUG -W 'ignore:unclosed:ResourceWarning'"

[tool.pytest_env]
SPANREED_SETTINGS_MODULE = "tests.settings"

[tool.black]
line-length = 120
target-version = ['py311']
skip-string-normalization = true

[tool.ruff]
line-length = 120
target-version = 'py312'

[tool.ruff.lint]
select = ['ALL']
fixable = ['ALL']
ignore = [
  'ANN',
  'BLE001',   # Do not catch blind exception: `Exception`
  'COM812',   # Missing trailing comma
  'D',
  'E501',     # Line too long
  'EM101',    # Exception must not use a string literal, assign to variable first
  'EM102',    # Exception must not use an f-string literal, assign to variable first
  'ERA001',   # Found commented-out code
  'G004',     # Logging statement uses f-string
  'ISC001',   # Single line implicit string concatenation
  'LOG015',   # Don't call root logger
  'N818',     # Exception should be named with an Error suffix
  'PLR2004',  # Magic value used in comparison
  'PLW2901',  # `for` loop variable `stream_name` overwritten by assignment target
  'PT006',    # Wrong type passed to first argument of `@pytest.mark.parametrize`; expected `tuple`
  'PT007',    # rong values type in `@pytest.mark.parametrize`
  'Q000',     # Single quotes found but double quotes preferred
  'RUF012',   # Mutable class attributes should be annotated with `typing.ClassVar`
  'RUF013',   # PEP 484 prohibits implicit `Optional`
  'S101',     # Use of `assert` detected
  'SLF001',   # Private member accessed: `_wrapped`
  'T201',     # `print` found
  'TRY003',   # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["ARG"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.format]
quote-style = "preserve"
